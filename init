#!/usr/bin/env bash
set -e
set -o pipefail

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
CMD=${@:-ansible-playbook-wrapper}

source "${DIR}/.env"

SERVER_DRONE_IP=${SERVER_DRONE_IP:-}
SERVER_BLOG_IP=${SERVER_BLOG_IP:-}
SSH_USER=${SSH_USER}
SSH_PRIVATE_KEY=${SSH_PRIVATE_KEY}
LE_EMAIL=${LE_EMAIL}
DRONE_HOST=${DRONE_HOST}
DRONE_GITHUB_CLIENT=${DRONE_GITHUB_CLIENT}
DRONE_GITHUB_SECRET=${DRONE_GITHUB_SECRET}
DRONE_SECRET=${DRONE_SECRET}

if [[ -z "${SERVER_DRONE_IP}" ]]; then
    printf "You must create a .env file and define "
    printf "SERVER_DRONE_IP\n"

    exit 1
fi

if [[ ! -z "${SERVER_DRONE_IP}" ]] &&
   [[ ! -z "${SERVER_BLOG_IP}" ]]; then
    INVENTORY=/etc/ansible/hosts-joined.yml
else
    INVENTORY=/etc/ansible/hosts.yml
fi

docker container run -it --rm \
    -e INVENTORY=${INVENTORY} \
    -e PLAYBOOK=/etc/ansible/playbook.yml \
    -e ANSIBLE_HOST_KEY_CHECKING=false \
    -e SERVER_DRONE_IP=${SERVER_DRONE_IP} \
    -e SERVER_BLOG_IP=${SERVER_BLOG_IP} \
    -e SSH_USER=${SSH_USER} \
    -e LE_EMAIL=${LE_EMAIL} \
    -e DRONE_HOST=${DRONE_HOST} \
    -e DRONE_GITHUB_CLIENT=${DRONE_GITHUB_CLIENT} \
    -e DRONE_GITHUB_SECRET=${DRONE_GITHUB_SECRET} \
    -e DRONE_SECRET=${DRONE_SECRET} \
    -v ${PWD}:/etc/ansible \
    -v ${SSH_PRIVATE_KEY}:/root/.ssh/id_rsa \
    williamyeh/ansible:ubuntu16.04-onbuild bash -c "${CMD}"
